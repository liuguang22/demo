<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.AdminMapper">

    <!-- 学生 -->

    <insert id="Newsuser">
        INSERT INTO user (user_id,user_sf,password)
        VALUES (#{user_id}, 's', #{password})
    </insert>
    <insert id="Newstudent">
        INSERT INTO student (s_id,s_name, s_sex, s_age, s_spe)
        VALUES (#{student_id}, #{student_name}, #{student_sex}, #{student_age}, #{student_spe})
    </insert>

    <update id="updateStudent">
        UPDATE student set
                           s_id = #{sId},
                           s_name = #{sName},
                           s_sex = #{sSex},
                           s_age = #{sAge},
                           s_spe = #{sSpe}
        WHERE s_id = #{sId}
    </update>

    <select id="getAllStudent" resultType="com.example.demo.entity.Student">
        select s_id,s_name, s_sex, s_age, s_spe from student
    </select>

    <delete id="deletestudent">
        delete from student where s_id =#{student_id}
    </delete>
    <delete id="deleteuser">
    delete from user where user_id =#{user_id}
    </delete>

    <!-- 教师 -->

    <insert id="Newsuser1">
        INSERT INTO user (user_id,user_sf,password)
        VALUES (#{user_id}, 't', #{password})
    </insert>
    <insert id="NewTeacher">
        INSERT INTO teacher (t_id,t_name, t_sex, t_age, t_spe)
        VALUES (#{teacher_id}, #{teacher_name}, #{teacher_sex}, #{teacher_age}, #{teacher_spe})
    </insert>

    <update id="updateTeacher">
        UPDATE student set
                           t_id = #{teacher_id},
                           t_name = #{teacher_name},
                           t_sex = #{teacher_sex},
                           t_age = #{teacher_age},
                           t_spe = #{teacher_spe},
                           WHERE t_id = #{teacher_id}
    </update>

    <select id="getAllTeacher" resultType="com.example.demo.entity.Teacher">
        select * from teacher
    </select>

    <delete id="deleteteacher">
        delete from teacher where t_id =#{teacher_id}
    </delete>
    <delete id="deleteuser1">
        delete from user where user_id =#{user_id}
    </delete>

    <!-- 课程 -->
    <insert id="NewCourse" parameterType="map">
        INSERT INTO course (c_id,c_name,c_credit,r_id,t_id,t_time )
        VALUES (#{cId},#{cName},#{cCredit},#{rId},#{tId},#{tTime})
    </insert>

    <delete id="deletecourse">
        delete from course where c_id =#{c_id}
    </delete>

    <select id="getAllCourses" resultType="com.example.demo.entity.Course">
        select course.*,teacher.t_name from course join teacher on course.t_id = teacher.t_id;
    </select>

    <!-- 专业 -->

    <insert id="NewSpe">
        INSERT INTO spe (spe_id,spe_name)
        VALUES (#{speId}, #{speName})
    </insert>

    <update id="updateSpe">
        UPDATE spe set
                       spe_id = #{speId},
                       spe_name = #{speName}
        WHERE spe_id = #{speId}
    </update>

    <select id="getAllSpe" resultType="com.example.demo.entity.Spe">
        select * from Spe
    </select>

    <delete id="deletespe">
        delete from Spe where spe_id =#{speId}
    </delete>

</mapper>